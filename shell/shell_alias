#!/bin/bash

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls="ls --color=auto"
    alias dir="dir --color=auto"
    alias vdir="vdir --color=auto"

    alias grep="grep --color=auto"
    alias fgrep="fgrep --color=auto"
    alias egrep="egrep --color=auto"
fi

# some more ls aliases
alias ll="ls -lFh"
alias la="ls -lAFh"
alias l="ls -CF"
alias lsg="ll | grep "
alias lag="la | grep"
# 返回上一级、上两级、上三级目录
alias ..="cd ..; l"
alias ...="cd ../..; l"
alias ....="cd ../../..; l"

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

alias baidu="ping www.baidu.com"

# apt alias
alias update="sudo apt update"
alias upgrade="sudo apt upgrade -y"
alias distupgrade="sudo apt dist-upgrade -y"
alias upgradable="apt list --upgradable"
alias autoremove="sudo apt autoremove"
alias cleanconf="dpkg -l | grep ^rc | awk '{print \$2}' | sudo xargs dpkg -P"
alias apts="apt search "
alias apti="sudo apt install "
alias aptl="apt list "
alias aptfzf="apt list | fzf "

[[ -f /usr/local/bin/yazi ]] && alias lf="yazi"

# rsync
alias rsync="rsync -av --progress "
alias rsync_mirror="rsync --delete "

alias nv="nvim"
alias nvim-tiny="nvim -u ~/.config/nvim/vimrc "
# alias vim="nvim -u ~/.config/nvim/vimrc "
sync_vim() {
    local server=$1
    rsync ~/.vimrc $server:~/.vimrc
}
sync_nvim() {
    local server=$1
    rsync ~/.vimrc $server:~/.vimrc
    rsync_mirror --exclude test/ ~/.config/nvim/ $server:~/.config/nvim/
    rsync_mirror --exclude .git/ ~/.local/share/nvim/lazy/ $server:~/.local/share/nvim/lazy/
}

alias cls="clear"
[[ -f /usr/bin/batcat ]] && alias cat="batcat"
alias cda="conda activate "
alias cdd="conda deactivate "
alias dea="deactivate"
alias autoenv="touch .autoenv.zsh .autoenv_leave.zsh \
&& chmod +x .autoenv.zsh .autoenv_leave.zsh"
alias rmautoenv='trash .autoenv.zsh .autoenv_leave.zsh'
alias cp="cp -r "
alias rm="rm -i "                            # 使用rm 删除的时候，会有一个确认的提示。
[[ -f /usr/bin/trash ]] && alias rm="trash " # 如果有trash, 用trash覆盖
alias psg="ps -A | grep "

# git
alias dst="yadm status "
alias gst="git status "
alias ga="git add "
alias gc1="git clone --depth=1 "
alias grt='cd "$(git rev-parse --show-toplevel || echo .)"'
gpull() {
    echo "pull from origin"
    local current_branch=$(git branch --show-current)
    git pull --rebase origin $current_branch:$current_branch
}

# dd
alias dd="dd status=progress "
ddgz_w() {
    local file=$1
    local device=$2
    gzip -dc "$file" | sudo dd of="$device" bs=128K
}
ddgz_r() {
    local device=$1
    local file=$2
    sudo dd if="$device" | gzip >"$file"
}

# ssh
alias ssh-keygen="ssh-keygen -t ed25519 " # ed25519 不需要指定长度
alias ssh-keygen-rsa="ssh-keygen -t rsa -b 4096 "

# if has command
executable() {
    local cmd=$1
    if command -v $cmd >/dev/null 2>&1; then
        return $(true)
    else
        return $(false)
    fi
}
# example
# if $(executable "git") ; then
#     echo 'has git'
# fi
